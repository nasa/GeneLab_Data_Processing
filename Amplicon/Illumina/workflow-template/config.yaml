############################################################################################
## Configuration file for GeneLab Illumina amplicon processing workflow                   ##
## Developed by Michael D. Lee (Mike.Lee@nasa.gov)                                        ##
############################################################################################

############################################################
##################### VARIABLES TO SET #####################
############################################################

####################################################################################
##### These first 11 need to match what is specific to our system and our data #####
####################################################################################

## single-column file with unique sample identifiers:
sample_info_file:
    "unique-sample-names.txt"

## input reads directory (can be relative to workflow directory, or needs to be full path)
raw_reads_dir:
    "../Raw_Data/"

## raw read suffixes (region following the unique part of the sample names)
  # e.g. for "Sample-1_R1_raw.fastq.gz" would be "_R1_raw.fastq.gz"
raw_R1_suffix:
    "_R1_raw.fastq.gz"
raw_R2_suffix:
    "_R2_raw.fastq.gz"

## if we are trimming primers or not ("TRUE", or "FALSE")
trim_primers:
    "TRUE"

## primer sequences if we are trimming them
F_primer:
    "GTGCCAGCMGCCGCGGTAA"
R_primer:
    "GGACTACHVGGGTWTCTAA"

## should cutadapt treat these as linked primers? (https://cutadapt.readthedocs.io/en/stable/recipes.html#trimming-amplicon-primers-from-both-ends-of-paired-end-reads)
primers_linked:
    "TRUE"

## if primers are linked, we need to provide them as below, where the second half, following three periods, is the other primer reverse-complemented (see https://cutadapt.readthedocs.io/en/stable/recipes.html#trimming-amplicon-primers-from-both-ends-of-paired-end-reads)
  # (can reverse complement while retaining ambiguous bases at this site: http://arep.med.harvard.edu/labgc/adnan/projects/Utilities/revcomp.html)
F_linked_primer:
    "GTGCCAGCMGCCGCGGTAA...TTAGAWACCCBDGTAGTCC"
R_linked_primer:
    "GGACTACHVGGGTWTCTAA...TTACCGCGGCKGCTGGCAC"

## minimum length threshold for cutadapt
min_cutadapt_len:
    150

######################################################################
##### The rest only need to be altered if we want to change them #####
######################################################################

## values to be passed to dada2's filterAndTrim() function:
left_trunc:
    0
right_trunc:
    0
left_maxEE:
    1
right_maxEE:
    1

## filename suffixes
primer_trimmed_R1_suffix:
    "_R1_trimmed.fastq.gz"
primer_trimmed_R2_suffix:
    "_R2_trimmed.fastq.gz"

filtered_R1_suffix:
    "_R1_filtered.fastq.gz"
filtered_R2_suffix:
    "_R2_filtered.fastq.gz"


## output directories (all relative to processing directory, they will be created if needed)
fastqc_out_dir:
    "../FastQC_Outputs/"
trimmed_reads_dir:
    "../Trimmed_Sequence_Data/"
filtered_reads_dir:
    "../Filtered_Sequence_Data/"
final_outputs_dir:
    "../Final_Outputs/"


############################################################
###################### GENERAL INFO ########################
############################################################
# Workflow is currently equipped to work with paired-end data only, and reads are expected to be gzipped

## example usage command ##
# snakemake --use-conda --conda-prefix ${CONDA_PREFIX}/envs -j 2 -p

# `--use-conda` – this specifies to use the conda environments included in the workflow
# `--conda-prefix` – this allows us to point to where the needed conda environments should be stored. Including this means if we use the workflow on a different dataset somewhere else in the future, it will re-use the same conda environments rather than make new ones. The value listed here, `${CONDA_PREFIX}/envs`, is the default location for conda environments (the variable `${CONDA_PREFIX}` will be expanded to the appropriate location on whichever system it is run on).
# `-j` – this lets us set how many jobs Snakemake should run concurrently (keep in mind that many of the thread and cpu parameters set in the config.yaml file will be multiplied by this)
# `-p` – specifies to print out each command being run to the screen

# See `snakemake -h` for more options and details.
