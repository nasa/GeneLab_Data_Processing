//******** Global parameters *****************//
params {
    publishDir_mode     = "link" // "copy", "link", "symlink"
    //-------- Parmeters used to generate README.txt  ------------------//
    name                = "FirstName M. LastName"  // name of analyst
    email               = "name@nasa.gov" // email of analyst
    // Genelab pipeline document protocol id used to process the data
    protocol_id         = "GL-DPPD-7107-A"  
    GLDS_accession      =  "" // e.g. "GLDS-574"
    OSD_accession       =  "" // e.g. "OSD-574"
    assay_suffix        =  "_GLmetagenomics"
    readme              = "README${params.assay_suffix}.txt" 
    processing_zip_file = "processing_info${params.assay_suffix}.zip"
    logs                = "Logs/" // base directory name of directory containg sample logs from processing - should always end with '/'

    
    /* extra parameters and arguments to GL-gen-processed-metagenomics-data-readme command.
    run `GL-gen-processed-metagenomics-readme --help` for extra parameters that can be set
     "--raw-reads-dir  '../Raw_Sequence_Data/' "  for Metagenomics

     */ 
    readme_extra              =  "" 

    output_prefix = ""
    V_V_guidelines_link = "https://genelab-tools.arc.nasa.gov/confluence/pages/viewpage.action?pageId=8225175"
    // A comma separated list of files and/or directories to find in processing_info.zip
    target_files = "main.nf,nextflow.config,unique-sample-IDs.txt,envs/,bin/,config/,modules/,${params.logs}"
    // Suffixes
    raw_suffix         = "_HRremoved_raw.fastq.gz"
    raw_R1_suffix      = "_R1_HRremoved_raw.fastq.gz"
    raw_R2_suffix      = "_R2_HRremoved_raw.fastq.gz"
    filtered_suffix    = "_filtered.fastq.gz"
    filtered_R1_suffix = "_R1_filtered.fastq.gz"
    filtered_R2_suffix = "_R2_filtered.fastq.gz"
    /* Extra parameters and arguments to GL-validate-processed-metagenomics-data command
    run `GL-validate-processed-metagenomics-data --help` for extra parameters that can be set
     "--single-ended" if data are single-ended  
     "--R1-used-as-single-ended-data" if processing only R1 reads as single-end
     */
     validation_extra = "--skip_raw_multiqc"

    /* Extra parameters and arguments to GL-gen-metagenomics-file-associations-table command
    run `GL-gen-metagenomics-file-associations-table --help` for extra parameters that can be set
     "--single-ended" if data are single-ended  
     "--R1-used-as-single-ended-data" if processing only R1 reads as single-end
     */
     file_association_extra = "--use-sample-names-from-assay-table"


    files {
        main              = "./main.nf"
        config            = "./nextflow.config" 
        samples           = "./unique-sample-IDs.txt"
        assay_table       = "" //"../GeneLab/a_OSD-574_metagenomic-sequencing_whole-genome-shotgun-sequencing_illumina.txt"
        isa_zip           = "" //"../GeneLab/OSD-574_metadata_OSD-574-ISA.zip"
        runsheet          = "" // "../GeneLab/GLfile.csv"
        software_versions = "" //"../Metadata/software_versions.txt"
    }

    // Make sure you always end the directory names with a forward slash "/" and that if you use
    // relative paths, they are located in the run directory (./) or in its parent (../)
    directories {
        bin                       = "./bin/"
        envs                      =  "./envs/"
        config                    = "./config/"
        modules                   = "./modules/"
        logs                      = "../${params.logs}"
        Raw_Sequence_Data         = "../Raw_Sequence_Data"
        FastQC_Outputs            = "../FastQC_Outputs/"
        Read_Based_Processing     = "../Read-based_Processing/"
        Filtered_Sequence_Data    = "../Filtered_Sequence_Data/"
        Assembly_Based_Processing = "../Assembly-based_Processing/"
        Assemblies                = "../Assembly-based_Processing/assemblies/"
        Genes                     = "../Assembly-based_Processing/predicted-genes/"
        Annotations_And_Tax       = "../Assembly-based_Processing/annotations-and-taxonomy/"
        Mapping                   = "../Assembly-based_Processing/read-mapping/"
        Combined_Output           = "../Assembly-based_Processing/combined-outputs/"
        Bins                      = "../Assembly-based_Processing/bins/"
        MAGS                      = "../Assembly-based_Processing/MAGs/"
        Output_dir                = "../Post_Processing/"
    }

    conda{
          // Specify paths to existing conda environments
          // Leave as is if you'd like to create a new conda environment
          genelab = null          // "/path/to/envs/genelab-utils"
         }

}


params.baseDir = "${baseDir}"
parent_dir = "${baseDir.getParent()}"
// Setting the default container engine as singularity
params.containerEngine = "singularity"
// Conda shouldn't be used be default except when using conda-based profiles
// i.e., slurm_conda and conda
params.use_conda = false


/***************************************************************************************
********************************  Workflow Profiles ************************************
****************************************************************************************/
profiles {
    slurm {
         process.executor     = 'slurm' 
     }

    conda {   
        conda.enabled         = true
        params.use_conda      = true               
    }

    singularity {
        singularity.enabled    = true
        singularity.autoMounts = true
        singularity.cacheDir   = "singularity/" // local singularity images location
        params.containerEngine = "singularity"
    }

    docker {
        docker.enabled         = true
        docker.runOptions      = '-u $(id -u):$(id -g)'
        docker.userEmulation   = true
        params.containerEngine = "docker"
    }
}

// Maximum number of jobs to submit in parallel
executor.queueSize = 20

/************************************************************************************
*********** Tune process specific resources (cpu, container, memory etc.) ***********
*************************************************************************************/
process {
    //******************* Default process settings ************************//
    errorStrategy = "ignore"
    cpus = 2
    memory = '5 GB'
    cache = 'lenient'
    conda = {params.conda.genelab != null ? params.conda.genelab : "envs/genelab.yaml"}
    container = "olabiyi/genelab-utils:1.3.22"
    publishDir = [path: params.directories.Output_dir, mode: params.publishDir_mode]


    // Mount Parent directory for processes that copy files
    withName: "PACKAGE_PROCESSING_INFO|GENERATE_MD5SUMS" {

        containerOptions = { params.containerEngine == "singularity" ? "-B ${parent_dir}" : "-v ${parent_dir}" }
    }
}


/******************************************************************************
**************************** Workflow Metadata ********************************
*******************************************************************************/
manifest {
    author = 'Olabiyi Aderemi Obayomi'
    homePage = 'https://github.com/nasa/GeneLab_Data_Processing/blob/master/Metagenomics/'
    description = 'Metagenomics Illumina post-processing workflow'
    mainScript = 'post_processing.nf'
    defaultBranch = 'main'
    nextflowVersion = '>=24.04.4'
    version = '1.0.0'
}
